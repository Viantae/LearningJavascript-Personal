<script>
  var rect = {x: 5, y: 5, width: 50, height: 50}
  var rect2 = {x: 5, y: 5, width: 50, height: 50}

// Collision between squares
// Method 1a
  if (rect1.x < rect2.x + rect2.width && // if rectangle 1's is to the left of is rectangle 2's on the horizontal axis
      rect1.x + rect1.width > rect2.x &&  // if rectangle 1's right edge more than rectangle 2's right edge (if it passes to the right more)
      rect1.y < rect2.y + rect2y.height && // if the height of rectangle 1 is above rectangle 2 lowest point
      rect1.y + rect1.height > rect2.y)   // if rectangle 1's point is below rectangle 2's highest point
      {  
        
    // collision detected
  }
  else{
    // no collision detected
  }

// Method 1b (More efficient)
  if (rect1.x > rect2.x + rect2.width || // if rectangle 1's is to the left of is rectangle 2's on the horizontal axis
        rect1.x + rect1.width < rect2.x ||  // if rectangle 1's right edge more than rectangle 2's right edge (if it passes to the right more)
        rect1.y > rect2.y + rect2y.height || // if the height of rectangle 1 is above rectangle 2 lowest point
        rect1.y + rect1.height < rect2.y)   // if rectangle 1's point is below rectangle 2's highest point
  {     
    // no collision detected
  }
  else{
    // collision detected
  }

// Collision between circles
  const circle1 = {x: 10,  y: 10, radius: 300};
  const circle2 = {x: 500,  y: 500, radius: 150};

  // Pythagoream theorem to find the distance
  let dx = circle2.x - circle1.x;
  let dy = circle2.y - circle1.y;

  let distance = Math.sqrt(dx^2 * dy^2);
  let sumofRadi = circle1.radius + circle2.radius;

  // if distance between two center points is more than radius of circle1 + circle2
  if (distance > sumofRadi){
    // cannot collide
  }
  // if the distance is the same
  else if (distance == sumofRadi){
    // they collide, touch
  }
  // if the distance is smaller
  else if (distance < sumofRadi){
    // they overlap/collide
  }

</script>
